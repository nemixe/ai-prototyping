# Modules Specification

A web-based application to manage a generic resource. Users can perform CRUD (Create, Read, Update, Delete) operations such as listing items, viewing details, creating new items, and editing or deleting existing items. The application leverages a modular routing structure based on React Router.

## Routing Structure

### List Page (Read)
- **File Path:** `src/app/[resource]/page.jsx`
- **Example Files:** `cline/examples/list.jsx`, `cline/examples/list-with-tabs.jsx`
- **Important Notes:**
  - Use components from the examples; do not create custom components.
  - **Route:** `[resource]`
  - **Features:**
    - Displays a list of resource items.
    - Provides example real data for the list.
    - Supports search, filtering, and sorting based on specifications.
    - Ensure navigation options for creating, editing, and viewing details.
    - **DO NOT** add extra fields not specified in resource specifications.

### Detail Page (Read)
- **File Path:** `src/app/[resource]/[id]/page.jsx`
- **Example Files:** `cline/examples/detail.jsx`, `cline/examples/complex-detail.jsx`
- **Route:** `[resource]/:id`
- **Features:**
  - Displays detailed information about a selected item.
  - Includes a back button to return to the list page.

### Edit Page (Update)
- **File Path:** `src/app/[resource]/[id]/update/page.jsx`
- **Example File:** `cline/examples/update.jsx`
- **Route:** `[resource]/:id/edit`
- **Features:**
  - Provides a form for updating an existing item.
  - Pre-fills fields with current item data.
  - Implements validation rules.
  - Includes back, cancel, and submit buttons.

### Create Page (Create)
- **File Path:** `src/app/[resource]/create/page.jsx`
- **Example File:** `cline/examples/create.jsx`
- **Route:** `[resource]/create`
- **Features:**
  - Provides a form for creating a new item.
  - Implements validation rules.
  - Includes back, cancel, and submit buttons.

## Additional Notes
- **Shared Form Component**
  - **File Path:** `src/app/[resource]/_components/form.jsx`
  - **Example File:** `cline/examples/form.jsx`
  - Use the same form for Create and Update pages.
- **Sidebar Navigation**
  - Add `[resource]` to `SIDEBAR_ITEMS` in `src/app/layout.jsx`.
- **Default Icon**
  - Use `MailOutlined` from `@ant-design/icons` as the default sidebar icon.
- **Import Rules**
  - Use absolute imports matching the resource folder structure.
  - **DO NOT** use relative imports.
- **Example Data**
  - Use real, meaningful data examples.
  - **Incorrect:** `{ title: "Song 1", artist: "Artist 1" }`
  - **Correct:** `{ title: "Bohemian Rhapsody", artist: "Queen" }`
- **Date Format:** ISO 8601, formatted as `DD-MM-YYYY` with `dayjs`.
- **Table Rules**
  - Use `DataTable` from `admiral` instead of `table` from `antd`.
  - Make sure to use data structure as specified below.
    ```json
    {
      "data": {
        "status_code": 200,
        "version": "1.0.0",
        "data": {
          "items": [
            { "id": 1, "name": "Item 1" }
          ],
          "meta": {
            "total_page": 1,
            "total": 10,
            "page": 1,
            "per_page": 10
          }
        }
      },
      "loading": false
    }
    ```
- **Resource Rules**
  - Use plural for resource names.

# AI Routing Generation Rules

## VERY IMPORTANT INFORMATION

- **DO NOT** create a new `[resource].md` file inside `cline/specs`.
- This project uses **Vite with React Router**.
- Use **react-router**, **NOT** react-router-dom.

## 1. Markdown File Scope
- **Only** read markdown files in `cline/specs`.
- **DO NOT** read files outside the `cline` folder.

## 2. Understanding Requests

- **Full CRUD Request:**
  - If a user asks for a `[resource]` page, generate all CRUD pages.
- **Specific Page Request:**
  - If a user requests a specific page, generate only that page.

## 3. Examples

- **Full CRUD Example:**
  - **User Query:** "Make me a books page."
  - **Action:** Generate full CRUD pages for "books".
- **Specific Page Example:**
  - **User Query:** "Make me just a books create page."
  - **Action:** Generate only the Create page for "books".

## 4. Working Apps
- This is an existing, working app; do **not** modify beyond the assigned task.

## 5. Dependencies
- Check `package.json` before adding any dependency.

Follow these rules to ensure proper implementation of the routing structure.
